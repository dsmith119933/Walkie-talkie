const startRecordingButton = document.getElementById('start-recording');
const stopRecordingButton = document.getElementById('stop-recording');
const audioPlayback = document.getElementById('audio-playback');
const statusDisplay = document.getElementById('status');

let mediaRecorder;
let audioChunks = [];

startRecordingButton.addEventListener('click', async () => {
    startRecordingButton.disabled = true;
    stopRecordingButton.disabled = false;
    statusDisplay.textContent = 'Recording...';

    try {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
        mediaRecorder = new MediaRecorder(stream);

        mediaRecorder.ondataavailable = (event) => {
            audioChunks.push(event.data);
        };

        mediaRecorder.onstop = () => {
            const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
            const audioUrl = URL.createObjectURL(audioBlob);
            audioPlayback.src = audioUrl;
            audioChunks = [];
        };

        mediaRecorder.start();
    } catch (error) {
        console.error('Error accessing microphone:', error);
        statusDisplay.textContent = 'Error accessing microphone';
        startRecordingButton.disabled = false;
        stopRecordingButton.disabled = true;
    }
});

stopRecordingButton.addEventListener('click', () => {
    stopRecordingButton.disabled = true;
    startRecordingButton.disabled = false;
    statusDisplay.textContent = 'Idle';
    mediaRecorder.stop();
});
